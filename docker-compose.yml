version: '3'

services:
  consumer:
    container_name: consumer
    build:
      context: .
      dockerfile: Dockerfile
      args:
        build_context: consumer
    environment:
      - KAFKA_HOST=kafka:9092
      - REDIS_HOST=cache
      - REDIS_PORT=6379
      - REDIS_PASSWORD=eYVX7EwVmmxKPCDmwMtyKVge8oLd2t81
      - REDIS_TTL=1800
    links:
      - cache
      - kafka
      - zookeeper
  producer:
    container_name: producer
    build:
      context: .
      dockerfile: Dockerfile
      args:
        build_context: producer
    environment:
      - PORT=3000
      - KAFKA_HOST=kafka:9092
    links:
      - kafka
      - zookeeper
    ports:
      - "3000:3000"
  zookeeper:
    container_name: zookeeper
    image: bitnami/zookeeper
    ports:
      - "2181:2181"
    volumes:
      - "zookeeper_data:/bitnami"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
  kafka:
    container_name: kafka  
    image: bitnami/kafka
    ports:
      - "9092:9092"
    volumes:
      - "kafka_data:/bitnami"
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
    depends_on:
      - zookeeper
  cache:
    container_name: cache
    image: redis:6.2-alpine
    restart: always
    ports:
      - '6379:6379'
    command: redis-server --save 20 1 --loglevel warning --requirepass eYVX7EwVmmxKPCDmwMtyKVge8oLd2t81
    volumes: 
      - cache:/data
  kafka-ui:
    image: provectuslabs/kafka-ui
    container_name: kafka-ui
    ports:
      - "3535:8080"
    restart: always
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9092

volumes:
  cache:
    driver: local
  zookeeper_data:
    driver: local
  kafka_data:
    driver: local